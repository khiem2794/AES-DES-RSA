<div class="container center-align">

    {{ form_start(form, { 'attr': { 'id': 'aes_encryption' } }) }}
    <div class="row">
        <div class="input-field col s12">
            {{ form_widget(form.AesEnKey,  { 'attr': { 'class':'materialize-textarea' } } ) }}
            <label for="form_Key" style="font-size: 1.1em">Your private key</label>
        </div>
        <div class="file-field input-field col s12">
            <div class="btn waves-effect waves-light left blue">
                <span>Load Key</span>
                <input id="aes_encrypt_load" type="file" accept=".txt">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="file-field input-field col s12">
            <div class="btn blue">
                <span>Upload File</span>
                {{ form_widget(form.AesEnFile) }}
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col s12">
            {{ form_widget(form.submit, {'label': 'Encrypt', 'attr': { 'class':'blue waves-effect waves-light btn right'} }) }}
        </div>
    </div>
    {{ form_end(form) }}

</div>

<div id="aes_encryption_modal" class="modal">
    <div class="modal-content center-align">
        <h4>AES ENCRYPTION COMPLETE</h4>

        <p>MD5 HASH: <span id="aes_encryption_hash"></span></p>
        <a id="aes_share" class="waves-effect waves-green btn blue">Share</a>
        <a id="aes_encryption_path" class="waves-effect waves-green btn blue">Download</a>
        <p>
        <div class="input-field col s12 center-align">
            <input  id="aes_en_path_input" type="text" value="This is a link" class="grey" readonly />
        </div>
        </p>
    </div>
    <div class="modal-footer">
        <a class=" modal-action modal-close waves-effect waves-green btn blue">Close</a>
    </div>
</div>
<script>
    $('#aes_encrypt_load').change(function () {
        if (this.files[0].type == "text/plain") {
            // generate a new FileReader object
            var reader = new FileReader();
            // inject an image with the src url
            reader.onload = function (event) {
                var data = event.target.result;
                $('#form_AesEnKey').val(data).trigger('autoresize');
                $("#aes_encryption label[for='form_Key']").addClass('active');
            };
            reader.readAsText(this.files[0]);
        } else {
            Materialize.toast('Only accept plain text', 1000); // Wrong type
        }
    });
    $('#aes_encryption').on('submit', function (e) {
        e.preventDefault();
        $("#aes_en_path_input").hide();
        $(this).ajaxSubmit({success: aesEncryptResponse});
    });
    function aesEncryptResponse(jsonres, status, xhr, $form) {
        $("#aes_encryption_hash").html(jsonres.hash);
        $("#aes_encryption_path").attr("href", jsonres.path);
        $('#aes_encryption_modal').openModal();
        $("#aes_en_path_input").attr("value", window.location.host + jsonres.path);
    }
    $("#aes_share").on("click", function() {
        $("#aes_en_path_input").show().select();
    });
</script>

